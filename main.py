import os
import json
import logging
from aiohttp import web
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ParseMode
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

TOKEN = "8467489835:AAF09FNV4dW1DVAMikyZeq1eIRu7oZgabws"

WEBHOOK_PATH = f"/webhook/{TOKEN}"
WEBAPP_HOST = "0.0.0.0"
WEBAPP_PORT = int(os.getenv("PORT", "8443"))

tasks = {
    "1": "üß† –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å 1: –ü—Ä–æ—á–∏—Ç–∞–π —Å—Ç–∞—Ç—å—é –æ –ø—Ä–∏–≤—ã—á–∫–∞—Ö –∏ –Ω–∞–ø–∏—à–∏ 3 —Å–≤–æ–∏ –ø–ª–æ—Ö–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å.",
    "2": "üìñ –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å 2: –ü—Ä–æ–≤–µ–¥–∏ 15 –º–∏–Ω—É—Ç –≤ —Ç–∏—à–∏–Ω–µ –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ—Å–ª–µ ‚Äî –∑–∞–ø–∏—à–∏, —á—Ç–æ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª.",
    "3": "üìù –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å 3: –°–æ—Å—Ç–∞–≤—å –ø–ª–∞–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é. –£–∫–∞–∂–∏ 3 –≤–∞–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ 2 –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–µ.",
    "4": "üíß –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å 4: –ü–µ–π –≤–æ–¥—É –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è. –ú–∏–Ω–∏–º—É–º 1,5 –ª–∏—Ç—Ä–∞. –ó–∞–ø–∏—à–∏, –∫–∞–∫ —ç—Ç–æ –ø–æ–≤–ª–∏—è–ª–æ –Ω–∞ —Ç–≤–æ—ë —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ.",
    "5": "üèÉ –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å 5: –ü—Ä–æ–≥—É–ª—è–π—Å—è –Ω–∞ —É–ª–∏—Ü–µ –º–∏–Ω–∏–º—É–º 30 –º–∏–Ω—É—Ç. –ë–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –Ω–∞—É—à–Ω–∏–∫–æ–≤.",
    "6": "üìµ –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å 6: –£—Å—Ç—Ä–æ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –¥–µ—Ç–æ–∫—Å –Ω–∞ 2 —á–∞—Å–∞. –ù–∏–∫–∞–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤. –ß–µ–º —Ç—ã –∑–∞–Ω—è–ª —ç—Ç–æ –≤—Ä–µ–º—è?",
    "7": "üéØ –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å 7: –ù–∞–ø–∏—à–∏ —Å–µ–±–µ –ø–∏—Å—å–º–æ –≤ –±—É–¥—É—â–µ–µ. –†–∞—Å—Å–∫–∞–∂–∏, —á–µ–≥–æ —Ö–æ—á–µ—à—å –¥–æ—Å—Ç–∏—á—å —á–µ—Ä–µ–∑ 1 –º–µ—Å—è—Ü."
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton(str(i), callback_data=str(i)) for i in range(1, 8)]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ:", reply_markup=reply_markup
    )

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    day = query.data
    task = tasks.get(day, "‚ùå –ó–∞–¥–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    await query.edit_message_text(text=task)

async def handler(request: web.Request):
    app = request.app["bot_app"]
    body = await request.text()
    update = Update.de_json(json.loads(body), app.bot)
    await app.process_update(update)
    return web.Response(text="ok")

async def on_startup(app: web.Application):
    webhook_url = f"https://tg-7day-bot.onrender.com{WEBHOOK_PATH}"
    await app["bot_app"].bot.set_webhook(webhook_url)
    logger.info(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")

async def on_shutdown(app: web.Application):
    await app["bot_app"].bot.delete_webhook()
    logger.info("Webhook —É–¥–∞–ª—ë–Ω")

def main():
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button))

    app = web.Application()
    app["bot_app"] = application

    app.router.add_post(WEBHOOK_PATH, handler)
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    web.run_app(app, host=WEBAPP_HOST, port=WEBAPP_PORT)

if __name__ == "__main__":
    main()