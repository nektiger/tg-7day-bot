import logging import json from aiohttp import web from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update from telegram.ext import ( Application, CallbackContext, CallbackQueryHandler, CommandHandler, ContextTypes )

–ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

TOKEN = "8467489835:AAF09FNV4dW1DVAMikyZeq1eIRu7oZgabws"

–í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

logging.basicConfig(level=logging.INFO) logger = logging.getLogger(name)

–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞–Ω–∏–π –∏–∑ JSON-—Ñ–∞–π–ª–∞

def load_tasks(): with open("tasks.json", encoding="utf-8") as f: return json.load(f)

TASKS = load_tasks()

–ö–æ–º–∞–Ω–¥–∞ /start

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE): keyboard = [[InlineKeyboardButton(f"–î–µ–Ω—å {i+1}", callback_data=f"day_{i+1}")] for i in range(7)] reply_markup = InlineKeyboardMarkup(keyboard)

await update.message.reply_text(
    "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –±–æ—Ç!\n–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ:",
    reply_markup=reply_markup
)

–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–Ω–µ–π

async def day_callback(update: Update, context: CallbackContext): query = update.callback_query await query.answer()

day_index = int(query.data.split("_")[1]) - 1
day_tasks = TASKS.get(f"day_{day_index+1}", [])

if day_tasks:
    response = f"üìÖ <b>–î–µ–Ω—å {day_index+1}</b>\n\n"
    for idx, task in enumerate(day_tasks, 1):
        response += f"<b>–ó–∞–¥–∞–Ω–∏–µ {idx}:</b> {task}\n"
else:
    response = "‚ùå –ó–∞–¥–∞–Ω–∏–π –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –ø–æ–∫–∞ –Ω–µ—Ç."

await query.edit_message_text(
    text=response,
    parse_mode="HTML"
)

Webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫

async def handler(request): data = await request.json() update = Update.de_json(data, application.bot) await application.initialize() await application.process_update(update) return web.Response()

–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –∑–∞–ø—É—Å–∫–∞

app = web.Application() app.router.add_post("/webhook/{token}", handler)

application = Application.builder().token(TOKEN).build() application.add_handler(CommandHandler("start", start)) application.add_handler(CallbackQueryHandler(day_callback))

if name == 'main': web.run_app(app, port=10000)

